--DATE :9-9-2023
--NAME : SUGANYA.G



USE [Case Study1]

Select * from dbo.Location
Select * from dbo.fact
Select * from dbo.Product

--1. Display the number of states present in the LocationTable. 

select count (distinct State) as number_of_states  from  dbo.Location

--2. How many products are of regular type?

select count (Product) as number_of_regulartype_products from  dbo.Product where Type='Regular'

--3. How much spending has been done on marketing of product ID 1?

select sum (Marketing) as Money_spent_on_p1 from  dbo.fact where [ProductId]=1

--4. What is the minimum sales of a product?

select Min (sales) as Minimum_Sales  from  dbo.fact 

--5. Display the max Cost of Good Sold (COGS). 
select max (COGS) as Maximum_Sales  from  dbo.fact 

--6. Display the details of the product where product type is coffee. 

select * from Product where Product_Type='Coffee'

--7. Display the details where total expenses are greater than 40. 
select ProductId,Total_Expenses from fact where Total_Expenses> 40

---8. What is the average sales in area code 719?

select AVG(sales) from fact where Area_Code='719'

--9. Find out the total profit generated by Colorado state

select sum(fact.profit) as profit from fact 
Right join Location
on Location.state= 'Colorado'

--10. Display the average inventory for each product ID. 

select AVG(Inventory) as average_Inventory,ProductId from fact group by ProductId

--11. Display state in a sequential order in a Location Table. 

select * from Location order by State asc

--12. Display the average budget of the Product where the average budget margin should be greater than 100. 

select ProductId, avg(budget_margin) as avg_budget_margin from fact group by ProductId having avg(budget_margin)>100 


--13. What is the total sales done on date 2010-01-01?
select sum(sales) as total_sales from fact where date='2010-01-01'

--14. Display the average total expense of each product ID on an individual date. 
select ProductId,Date,avg(total_expenses) as avg_expenses from fact group by date,ProductId order by ProductId asc


--15. Display the table with the following attributes such as date, productID, product_type, product, sales, profit, state, area_code. 

select fact.date,fact.ProductId,Product.Product_Type,Product.Product,fact.Sales,Location.State,Location.Area_Code from fact 
inner join 
product on fact.ProductId=Product.ProductId
inner join
Location on fact.Area_Code=Location.Area_Code

--16. Display the rank without any gap to show the sales wise rank. 
select sales, DENSE_RANK() over (order by sales desc) as sales_rank from fact 

--17. Find the state wise profit and sales. 
select l.state,sum(f.profit) as Profit, sum(f.sales) as Sales
from fact f
inner join 
Location l on f.Area_Code=l.Area_Code
group by l.State
--18. Find the state wise profit and sales along with the productname. 
select l.state,sum(f.profit) as Profit, sum(f.sales) as Sales,p.product
from fact f
inner join 
Location l on f.Area_Code=l.Area_Code
inner join
product p on p.ProductId=f.ProductId
group by l.State,p.Product

--19. If there is an increase in sales of 5%, calculate the increasedsales. 
select ProductId,sales,(sales+sales*5/100) as Increased_sale from fact

--20. Find the maximum profit along with the product ID and producttype. 
select fact.Productid, max(profit) as Maximum_Profit,product.Product_type from fact  
inner join  product on fact.ProductId=Product.ProductId
group by fact.ProductId,Product_Type
--21. Create a stored procedure to fetch the result according to the product typefrom Product Table. 
create procedure ProductType @prod_type varchar(20) as
select * from Product where Product_Type=@prod_type

exec ProductType @prod_type='coffee'

--22. Write a query by creating a condition in which if the total expenses is lessthan60 then it is a profit or else loss. 
select total_expenses,iif(total_expenses>60,'Profit','Loss') as Profit_or_Loss from fact

--23. Give the total weekly sales value with the date and product IDdetails. Useroll-up to pull the data in hierarchical order. 

select date ,ProductId,sum(sales) as Total_Sales from fact group by date,ProductId with rollup

--24. Apply union and intersection operator on the tables which consist of attribute area code. 
select Area_Code from fact
union
select Area_Code from location

select Area_Code from fact
intersect
select Area_Code from location


--25. Create a user-defined function for the product table to fetch a particular product type based upon the user’s preference.
create function Pro_Type(@Pro_Type varchar(20))
Returns table
as
return(select * from product where Product_Type=@Pro_Type)
select * from dbo.Pro_Type('coffee')

--26. Change the product type from coffee to tea where product IDis 1 and undo it. 
begin transaction
update Product
set Product_Type='tea'
where ProductId=1;

rollback

select * from Product


--27. Display the date, product ID and sales where total expenses are between 100 to 200. 
select date,productId,sales from fact where Total_Expenses between 100 and 200


--28. Delete the records in the Product Table for regular type. 
begin transaction
delete from Product where Type='regular'
rollback


--29. Display the ASCII value of the fifth character from the columnProduct.
select ASCII(substring(product,5,1)) as ASCII_VALUE from Product
